  docker.enabled = true
  docker.runOptions = "-i -v ${baseDir}:${baseDir}"
  process.container = "dataintuitive/viash"
  params {
    final_scores__input = "viash_no_value"
    final_scores__method_meta = "no_default_value_configured"
    final_scores__dataset_meta = "no_default_value_configured"
    final_scores__metric_meta = "viash_no_value"
    final_scores__output_scores = "viash_no_value"
    final_scores__output_summary = "viash_no_value"
    final_scores__output_json = "viash_no_value"
    id = ""
    testScript = ""
    testResources = [  ]
    final_scores {
      name = "final_scores"
      container = "match_modality_results_final_scores"
      containerTag = "1.1.0"
      containerRegistry = "openproblems"
      command = "final_scores"
      tests {
        isDefined = false
        testScript = "NA"
        testResources = [  ]
      }
      arguments {
        input {
          name = "input"
          otype = "--"
          required = true
          type = "file"
          direction = "Input"
          multiple = true
          multiple_sep = ":"
          value = "${params.final_scores__input}"
          example = "input.h5ad"
          description = "Input h5ad files containing metadata and metrics in adata.uns."
        }
        method_meta {
          name = "method_meta"
          otype = "--"
          required = false
          type = "file"
          direction = "Input"
          multiple = true
          multiple_sep = ":"
          value = "${params.final_scores__method_meta}"
          example = "method_meta.tsv"
          description = "A method metadata file. Must contain column 'method_id'."
        }
        dataset_meta {
          name = "dataset_meta"
          otype = "--"
          required = false
          type = "file"
          direction = "Input"
          multiple = true
          multiple_sep = ":"
          value = "${params.final_scores__dataset_meta}"
          example = "dataset_meta.tsv"
          description = "A dataset metadata file."
        }
        metric_meta {
          name = "metric_meta"
          otype = "--"
          required = true
          type = "file"
          direction = "Input"
          multiple = true
          multiple_sep = ":"
          value = "${params.final_scores__metric_meta}"
          example = "metric_meta.tsv"
          description = "A metric metadata file containing the default value of each metric in case a method errored on a particular dataset. Must contain column 'metric_id' and 'metric_value'."
        }
        output_scores {
          name = "output_scores"
          otype = "--"
          required = true
          type = "file"
          direction = "Output"
          multiple = false
          multiple_sep = ":"
          value = "${params.final_scores__output_scores}"
          example = "output.tsv"
          description = "Output tsv"
        }
        output_summary {
          name = "output_summary"
          otype = "--"
          required = true
          type = "file"
          direction = "Output"
          multiple = false
          multiple_sep = ":"
          value = "${params.final_scores__output_summary}"
          example = "output.tsv"
          description = "Output tsv"
        }
        output_json {
          name = "output_json"
          otype = "--"
          required = true
          type = "file"
          direction = "Output"
          multiple = false
          multiple_sep = ":"
          value = "${params.final_scores__output_json}"
          example = "output.json"
          description = "EvalAI score json"
        }
      }
    }
  }