  docker.enabled = true
  docker.runOptions = "-i -v ${baseDir}:${baseDir}"
  process.container = "dataintuitive/viash"
  params {
    baseline_umap__input_mod1 = "viash_no_value"
    baseline_umap__input_mod2 = "viash_no_value"
    baseline_umap__output = "viash_no_value"
    baseline_umap__n_dims = "10"
    baseline_umap__metric = "euclidean"
    baseline_umap__n_neighbors = "15"
    baseline_umap__n_pcs = "50"
    id = ""
    testScript = "test_method.R"
    testResources = [ "../../unit_tests/test_method.R", "../../../../resources_test" ]
    baseline_umap {
      name = "baseline_umap"
      container = "joint_embedding_methods_baseline_umap"
      containerTag = "1.2.0"
      containerRegistry = "openproblems"
      command = "baseline_umap"
      tests {
        isDefined = true
        testScript = "test_method.R"
        testResources = [ "../../unit_tests/test_method.R", "../../../../resources_test" ]
      }
      arguments {
        input_mod1 {
          name = "input_mod1"
          otype = "--"
          required = true
          type = "file"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.baseline_umap__input_mod1}"
          example = "dataset_mod1.h5ad"
          description = "Censored dataset."
        }
        input_mod2 {
          name = "input_mod2"
          otype = "--"
          required = true
          type = "file"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.baseline_umap__input_mod2}"
          example = "dataset_mod2.h5ad"
          description = "Censored dataset."
        }
        output {
          name = "output"
          otype = "--"
          required = true
          type = "file"
          direction = "Output"
          multiple = false
          multiple_sep = ":"
          value = "${params.baseline_umap__output}"
          example = "output.h5ad"
          description = "Dataset with predicted values for modality2."
        }
        n_dims {
          name = "n_dims"
          otype = "--"
          required = false
          type = "integer"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.baseline_umap__n_dims}"
          dflt = "10"
          description = "Number of dimensions to output."
        }
        metric {
          name = "metric"
          otype = "--"
          required = false
          type = "string"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.baseline_umap__metric}"
          dflt = "euclidean"
          description = "The metric to use. Possible values are euclidean, cosine, manhattan."
        }
        n_neighbors {
          name = "n_neighbors"
          otype = "--"
          required = false
          type = "integer"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.baseline_umap__n_neighbors}"
          dflt = "15"
          description = "Number of neighbor to use int he KNN."
        }
        n_pcs {
          name = "n_pcs"
          otype = "--"
          required = false
          type = "integer"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.baseline_umap__n_pcs}"
          dflt = "50"
          description = "Number of principal components to use in the PCA step."
        }
      }
    }
  }